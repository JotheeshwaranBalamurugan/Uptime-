import requests
import time
from datetime import datetime, timedelta


def get_ping_value(host_address):
    try:
        response = requests.get(host_address)
        response.raise_for_status()

        ping_ms = response.elapsed.total_seconds() * 1000  #
        ping_value = max(min(int(ping_ms), 100), 1)
        return ping_value
    except requests.exceptions.RequestException as e:
        print(f"Error: {e}")
        return 0


def calculate_average_ping(ping_values):
    return sum(ping_values) / len(ping_values) if ping_values else 0


def print_ping_report(time, avg_ping, status_code):
    print(f"At {time}, Average Ping: {avg_ping}, Status Code: {status_code}")

def main(host_address):
    ping_values_daily = []
    total_duration_hours = 24
    interval_seconds = 60  # Adjust as needed for more frequent updates



    end_time = datetime.now() + timedelta(hours=total_duration_hours)



    while datetime.now() < end_time:
        ping_value = get_ping_value(host_address)
        ping_values_daily.append(ping_value)



        if len(ping_values_daily) == (total_duration_hours * 60) / interval_seconds:
            current_time = datetime.now()
            avg_ping_daily = calculate_average_ping(ping_values_daily)
            print_ping_report(
                current_time.strftime("%H:%M"), avg_ping_daily, ping_value
            )



            ping_values_daily = []  # Reset for the next 24 hours



        time.sleep(interval_seconds)



host_address = "http://example.com"
main(host_address)